import { useState, useEffect } from 'react';
import DashboardLayout from '@/components/layout/DashboardLayout';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Camera, Upload, Trash2, Info, CheckCircle2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { SimpleFaceLoginSetup } from '@/components/SimpleFaceLoginSetup';
import { FaceUploadSetup } from '@/components/FaceUploadSetup';
import { supabase } from '@/integrations/supabase/client';
import { toast } from 'sonner';
import { useNavigate } from 'react-router-dom';

export default function FaceLoginSetup() {
  const navigate = useNavigate();
  const [existingFaceData, setExistingFaceData] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    checkExistingFaceData();
  }, []);

  const checkExistingFaceData = async () => {
    try {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) return;

      const { data, error } = await supabase
        .from('face_data')
        .select('*')
        .eq('user_id', user.id)
        .eq('is_active', true)
        .maybeSingle();

      if (error) throw error;
      setExistingFaceData(data);
    } catch (error) {
      console.error('Error checking face data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleDeleteFaceData = async () => {
    if (!existingFaceData) return;

    const confirmed = window.confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ุจูุงูุงุช ุงููุฌูุ ุณุชุญุชุงุฌ ุฅูู ุฅุนุงุฏุฉ ุงูุชุณุฌูู ูุงุณุชุฎุฏุงู ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฌู.');
    if (!confirmed) return;

    try {
      const { error } = await supabase
        .from('face_data')
        .update({ is_active: false })
        .eq('id', existingFaceData.id);

      if (error) throw error;

      // Also disable face login in profiles
      const { data: { user } } = await supabase.auth.getUser();
      if (user) {
        await supabase
          .from('profiles')
          .update({ face_login_enabled: false })
          .eq('id', user.id);
      }

      toast.success('ุชู ุญุฐู ุจูุงูุงุช ุงููุฌู ุจูุฌุงุญ');
      setExistingFaceData(null);
    } catch (error) {
      console.error('Error deleting face data:', error);
      toast.error('ูุดู ูู ุญุฐู ุจูุงูุงุช ุงููุฌู');
    }
  };

  const handleSuccess = () => {
    toast.success('ุชู ุชุณุฌูู ุงููุฌู ุจูุฌุงุญ! ๐');
    checkExistingFaceData();
  };

  if (loading) {
    return (
      <DashboardLayout>
        <div className="flex items-center justify-center min-h-[400px]">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
        </div>
      </DashboardLayout>
    );
  }

  return (
    <DashboardLayout>
      <div className="container max-w-4xl mx-auto p-6 space-y-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold">ุฅุนุฏุงุฏ ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฌู</h1>
            <p className="text-muted-foreground mt-2">
              ูู ุจุชุณุฌูู ุจูุงูุงุช ูุฌูู ูุชุณุฌูู ุงูุฏุฎูู ุจุดูู ุณุฑูุน ูุขูู
            </p>
          </div>
          <Button variant="outline" onClick={() => navigate('/profile')}>
            ุงูุนูุฏุฉ ููููู ุงูุดุฎุตู
          </Button>
        </div>

        {existingFaceData && (
          <Alert className="border-green-500 bg-green-50">
            <CheckCircle2 className="h-4 w-4 text-green-600" />
            <AlertDescription className="text-green-800">
              <div className="flex items-center justify-between">
                <div>
                  <strong>ุชู ุชูุนูู ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฌู</strong>
                  <p className="text-sm mt-1">
                    ุขุฎุฑ ุชุญุฏูุซ: {new Date(existingFaceData.updated_at).toLocaleDateString('ar-SA')}
                  </p>
                </div>
                <Button
                  variant="destructive"
                  size="sm"
                  onClick={handleDeleteFaceData}
                  className="gap-2"
                >
                  <Trash2 className="h-4 w-4" />
                  ุญุฐู ุงูุจูุงูุงุช
                </Button>
              </div>
            </AlertDescription>
          </Alert>
        )}

        <Alert>
          <Info className="h-4 w-4" />
          <AlertDescription>
            <ul className="list-disc list-inside space-y-1 text-sm">
              <li>ุชุฃูุฏ ูู ุฃู ุงูุฅุถุงุกุฉ ุฌูุฏุฉ ูุฃู ูุฌูู ูุงุถุญ</li>
              <li>ุงูุธุฑ ูุจุงุดุฑุฉ ุฅูู ุงููุงููุฑุง</li>
              <li>ุชุฌูุจ ุงุฑุชุฏุงุก ุงููุธุงุฑุงุช ุงูุดูุณูุฉ ุฃู ุงููุจุนุงุช</li>
              <li>ููููู ุงุณุชุฎุฏุงู ุงููุงููุฑุง ูุจุงุดุฑุฉ ุฃู ุฑูุน ุตูุฑุฉ ูู ุฌูุงุฒู</li>
            </ul>
          </AlertDescription>
        </Alert>

        <Card>
          <CardHeader>
            <CardTitle>
              {existingFaceData ? 'ุชุญุฏูุซ ุจูุงูุงุช ุงููุฌู' : 'ุชุณุฌูู ุจูุงูุงุช ุงููุฌู'}
            </CardTitle>
            <CardDescription>
              ุงุฎุชุฑ ุงูุทุฑููุฉ ุงูููุถูุฉ ูุชุณุฌูู ุตูุฑุฉ ูุฌูู
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Tabs defaultValue="camera" className="w-full">
              <TabsList className="grid w-full grid-cols-2">
                <TabsTrigger value="camera" className="gap-2">
                  <Camera className="h-4 w-4" />
                  ุงูุชูุงุท ุจุงููุงููุฑุง
                </TabsTrigger>
                <TabsTrigger value="upload" className="gap-2">
                  <Upload className="h-4 w-4" />
                  ุฑูุน ุตูุฑุฉ
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="camera" className="mt-6">
                <SimpleFaceLoginSetup 
                  onSuccess={handleSuccess}
                />
              </TabsContent>
              
              <TabsContent value="upload" className="mt-6">
                <FaceUploadSetup 
                  onSuccess={handleSuccess}
                />
              </TabsContent>
            </Tabs>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>ููู ูุนูู ุงููุธุงูุ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <h4 className="font-semibold">1. ุชุณุฌูู ุจู๏ฟฝ๏ฟฝูุงุช ุงููุฌู</h4>
              <p className="text-sm text-muted-foreground">
                ุนูุฏ ุชุณุฌูู ุตูุฑุฉ ูุฌููุ ูููู ุงููุธุงู ุจุชุญููู ุงูููุงูุญ ุงูุฏูููุฉ ููุฌูู ูุฅูุดุงุก "ุจุตูุฉ" ุฑูููุฉ ูุฑูุฏุฉ ูุชู ุชุฎุฒูููุง ุจุดูู ุขูู.
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-semibold">2. ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฌู</h4>
              <p className="text-sm text-muted-foreground">
                ูู ุตูุญุฉ ุชุณุฌูู ุงูุฏุฎููุ ุงููุฑ ุนูู ุฒุฑ "ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฌู" ูุงุณูุญ ูููุงููุฑุง ุจุงูุชูุงุท ุตูุฑุฉ. ุณูููู ุงููุธุงู ุจููุงุฑูุฉ ุงูุตูุฑุฉ ูุน ุงูุจูุงูุงุช ุงููุญููุธุฉ.
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-semibold">3. ุงูุฃูุงู ูุงูุฎุตูุตูุฉ</h4>
              <p className="text-sm text-muted-foreground">
                ุฌููุน ุจูุงูุงุช ุงููุฌู ูุญููุฉ ุจุชุดููุฑ ุนุงูู ุงููุณุชูู. ูุง ูููู ูุฃู ุดุฎุต ุงููุตูู ุฅูู ุจูุงูุงุชู ุบูุฑู.
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </DashboardLayout>
  );
}
